name: ASP.NET Core Web API Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x  # or the version you're using
        
    - name: Create publish folder
      run: |
       mkdir ./publish
    - name: Check workspace contents
      run: |
       ls -R ${{ github.workspace }}


    - name: Build and publish
      run:  dotnet publish -c Release -o ./publish
    - name: Create zip file
      run: |
       $publishFolder = "${{ github.workspace }}/publish"
       $zipFile = "${{ github.workspace }}/publish.zip"
    
       Compress-Archive -Path $publishFolder -DestinationPath $zipFile


    - name: Stop IIS Website
      run: |
        Import-Module -SkipEditionCheck
        Stop-WebSite -Name "practicecicdgithub" -ErrorAction SilentlyContinue

    - name: Deploy to IIS
      run: |
        $publishFolder = "${{ github.workspace }}/publish"
        $siteName = "practicecicdgithub"  # Replace with your website name in IIS
        $appPoolName = "practicecicdgithub"  # Replace with your application pool name in IIS

        Import-Module -SkipEditionCheck
        $appPoolPath = "IIS:\AppPools\$appPoolName"
        if (-not (Test-Path $appPoolPath)) {
          New-Item -Path $appPoolPath -Force
        }
        Set-ItemProperty -Path $appPoolPath -Name "managedRuntimeVersion" -Value ''
        Start-WebAppPool -Name $appPoolName

        $sitePath = "IIS:\Sites\$siteName"
        if (-not (Test-Path $sitePath)) {
          New-WebSite -Name $siteName -PhysicalPath $publishFolder -ApplicationPool $appPoolName -Port 81
        } else {
          Set-WebSite -Name $siteName -PhysicalPath $publishFolder -ApplicationPool $appPoolName
        }
